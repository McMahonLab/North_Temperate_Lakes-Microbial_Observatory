cm <- t(otu_table)
seven <- year_subset("07", otu_table)
CB <- bog_subset("CB.", seven)
colnames(CB)
NS <- bog_subset("NS.", seven)
TB <- bog_subset("TB.", seven)
SS <- bog_subset("SS.", seven)
MA <- bog_subset("MA.", seven)
otu_comm <- cbind(CB, NS, TB, SS, MA)
colnames(otu_comm)
data(taxonomy)
clade_comm <- combine_otus("Clade", otu_comm, taxonomy)
sampleids <- rownames(otu_comm)
layer <- substr(sampleids, start=3, stop=3)
head(layer)
tail(layer)
head(sampleids)
otu_comm <- t(otu_comm)
clade_comm <- t(otu_comm)
sampleids <- rownames(otu_comm)
layer <- substr(sampleids, start=3, stop=3)
head(layer)
tail(layer)
epi_v_hypo <- c()
for(i in 1:length(sampleids)){
if(layer == "E"){
epi_v_hypo[i] <- 1
}else if(layer == "H"){
epi_v_hypo[i] <- 2
}
}
warnings()
epi_v_hypo <- c()
for(i in 1:length(sampleids)){
if(layer[i] == "E"){
epi_v_hypo[i] <- 1
}else if(layer[i] == "H"){
epi_v_hypo[i] <- 2
}
}
head(epi_v_hypo)
tail(epi_v_hypo)
length(epi_v_hypo)
length(sampleids)
x <- c()
x[c(1,4,5)] <- 1
x
epi_v_hypo <- c()
epi_v_hypo[which(layer == "E")] <- 1
epi_v_hypo[which(layer == "H")] <- 2
length(epi_v_hypo)
epi_v_hypo
epi_v_hypo <- c()
layerid <- c("E", "H")
for(i in 1:length(layerid)){
epi_v_hypo[which(layer == layerid[i])] <- i
}
epi_v_hypo
lakes <- substr(sampleids, start=1, stop=2)
lakeid <- c("CB", "NS", "TB", "SS", "MA")
lake_groups <- c()
for(i in 1:length(lakeid)){
lake_groups[which(lakes == lakeid[i])] <- i
}
lake_groups
lake_layer_groups <- c()
for(i in 1:length(lakeid)){
for(j in 1:length(layerid)){
lake_layer_groups[which(lakes == lakeid[i] & layer == layerid[j])]
}
}
lake_layer_groups
i
j
i=1
j
j=1
which(lakes == lakeid[i] & layer == layerid[j])
lake_layer_groups <- c()
for(i in 1:length(lakeid)){
for(j in 1:length(layerid)){
lake_layer_groups[which(lakes == lakeid[i] & layer == layerid[j])] <- i*j
}
}
lake_layer_groups
mixing_groups <- c()
mixing_groups[which(lakeid == "CB" & layerid == "E")] <- 1
mixing_groups[which(lakeid == "CB" & layerid == "H")] <- 2
mixing_groups[which(lakeid == "TB" & lakeid == "NS" & lakeid == "SS" & layerid == "E")] <- 3
mixing_groups[which(lakeid == "TB" & lakeid == "NS" & lakeid == "SS" & layerid == "H")] <- 4
mixing_groups[which(lakeid == "MA" & layerid == "E")] <- 5
mixing_groups[which(lakeid == "MA" & layerid == "H")] <- 6
which(lakeid == "CB" & layerid == "E")
lakeid == "CB"
mixing_groups <- c()
mixing_groups[which(lakes == "CB" & layer == "E")] <- 1
mixing_groups[which(lakes == "CB" & layer == "H")] <- 2
mixing_groups[which(lakes == "TB" & lakes == "NS" & lakes == "SS" & layer == "E")] <- 3
mixing_groups[which(lakes == "TB" & lakes == "NS" & lakes == "SS" & layer == "H")] <- 4
mixing_groups[which(lakes == "MA" & layer == "E")] <- 5
mixing_groups[which(lakes == "MA" & layer == "H")] <- 6
mixing_groups
which(lakes == "TB" & lakes == "NS" & lakes == "SS" & layer == "E")
which(lakes == "TB" | lakes == "NS" | lakes == "SS" & layer == "E")
sampleids[which(lakes == "TB" | lakes == "NS" | lakes == "SS" & layer == "E")]
sampleids[which(lakes == "TB" & layer == "E"| lakes == "NS" & layer == "E"| lakes == "SS" & layer == "E")]
mixing_groups <- c()
mixing_groups[which(lakes == "CB" & layer == "E")] <- 1
mixing_groups[which(lakes == "CB" & layer == "H")] <- 2
mixing_groups[which(lakes == "TB" & layer == "E"| lakes == "NS" & layer == "E"| lakes == "SS" & layer == "E")] <- 3
mixing_groups[which(lakes == "TB" & layer == "H"| lakes == "NS" & layer == "H"| lakes == "SS" & layer == "H")] <- 4
mixing_groups[which(lakes == "MA" & layer == "E")] <- 5
mixing_groups[which(lakes == "MA" & layer == "H")] <- 6
mixing_groups
otu_by_layer <- multiplatt(x = otu_comm, cluster = epi_v_hypo, control = how(nperm = 999))
otu_by_layer <- multipatt(x = otu_comm, cluster = epi_v_hypo, control = how(nperm = 999))
dimnames(otu_comm)
otu_by_layer <- multipatt(x = otu_comm, cluster = epi_v_hypo, control = how(nperm = 999))
str(otu_comm)
otu_by_layer <- multipatt(x = as.data.frame(otu_comm), cluster = epi_v_hypo, control = how(nperm = 999))
summary(clade_by_layer)
summary(otu_by_layer)
summary(otu_by_layer, alpha = 0.001)
clade_comm <- t(clade_comm)
otu_comm <- as.data.frame(otu_comm)
clade_comm <- as.data.frame(clade_comm)
clade_by_layer <- multipatt(x = clade_comm, cluster = epi_v_hypo, control = how(nperm = 999))
summary(clade_by_layer, alpha = 0.001)
dim(clade_comm)
clade_comm <- combine_otus("Clade", otu_comm, taxonomy)
clade_comm <- t(clade_comm)
clade_comm <- as.data.frame(clade_comm)
dim(clade_comm)
head(colnames(clade_comm))
clade_by_layer <- multipatt(x = clade_comm, cluster = epi_v_hypo, control = how(nperm = 999))
which(is.na(clade_comm) == T)
which(is.na(clade_comm) == F)
even <- year_subset("07", otu_table)
CB <- bog_subset("CB.", seven)
NS <- bog_subset("NS.", seven)
TB <- bog_subset("TB.", seven)
SS <- bog_subset("SS.", seven)
MA <- bog_subset("MA.", seven)
otu_comm <- cbind(CB, NS, TB, SS, MA)
clade_comm <- combine_otus("Clade", otu_comm, taxonomy)
otu_comm <- t(otu_comm)
clade_comm <- t(clade_comm)
otu_comm <- as.data.frame(otu_comm)
clade_comm <- as.data.frame(clade_comm)
clade_by_layer <- multipatt(x = clade_comm, cluster = epi_v_hypo, control = how(nperm = 999))
summary(clade_by_layer, alpha = 0.001)
clade_comm <- combine_otus("Clade", otu_comm, taxonomy)
clade_comm <- reduce_names(clade_comm)
clade_comm <- t(clade_comm)
clade_comm <- as.data.frame(clade_comm)
clade_by_layer <- multipatt(x = clade_comm, cluster = epi_v_hypo, control = how(nperm = 999))
seven <- year_subset("07", otu_table)
CB <- bog_subset("CB.", seven)
NS <- bog_subset("NS.", seven)
TB <- bog_subset("TB.", seven)
SS <- bog_subset("SS.", seven)
MA <- bog_subset("MA.", seven)
otu_comm <- cbind(CB, NS, TB, SS, MA)
clade_comm <- combine_otus("Clade", otu_comm, taxonomy)
clade_comm <- reduce_names(clade_comm)
otu_comm <- t(otu_comm)
clade_comm <- t(clade_comm)
otu_comm <- as.data.frame(otu_comm)
clade_comm <- as.data.frame(clade_comm)
clade_by_layer <- multipatt(x = clade_comm, cluster = epi_v_hypo, control = how(nperm = 999))
summary(clade_by_layer, alpha = 0.001)
otu_by_mixing <- multipatt(x = otu_comm, cluster = mixing_groups, control = how(nperm = 999))
summary(otu_by_mixing, alpha = 0.001)
clade_by_mixing <- multipatt(x = clade_comm, cluster = mixing_groups, control = how(nperm = 999))
summary(clade_by_mixing, alpha = 0.001)
clade_by_lake_layer <- multipatt(x = clade_comm, cluster = lake_layer_groups, control = how(nperm = 999))
summary(clade_by_lake_layer, alpha = 0.001)
clade_by_layer <- multipatt(x = clade_comm, cluster = epi_v_hypo, control = how(nperm = 9999), print.perm = T)
summary(clade_by_layer, alpha = 0.0001)
clade_by_mixing <- multipatt(x = clade_comm, cluster = mixing_groups, control = how(nperm = 9999))
summary(clade_by_mixing, alpha = 0.001)
CB <- bog_subset("CBH", seven)
NS <- bog_subset("NSH", seven)
TB <- bog_subset("TBH", seven)
SS <- bog_subset("SSH", seven)
MA <- bog_subset("MAH", seven)
otu_comm <- cbind(CB, NS, TB, SS, MA)
clade_comm <- combine_otus("Clade", otu_comm, taxonomy)
clade_comm <- reduce_names(clade_comm)
clade_comm <- t(clade_comm)
clade_comm <- as.data.frame(clade_comm)
mixing_groups_hypo <- c()
mixing_groups_hypo[which(lakes == "CB"] <- 1
mixing_groups_hypo[which(lakes == "TB" | lakes == "NS" | lakes == "SS" ] <- 2
mixing_groups_hypo[which(lakes == "MA"] <- 3
mixing_groups_hypo <- c()
mixing_groups_hypo[which(lakes == "CB")] <- 1
mixing_groups_hypo[which(lakes == "TB" | lakes == "NS" | lakes == "SS") ] <- 2
mixing_groups_hypo[which(lakes == "MA")] <- 3
clade_by_mixing <- multipatt(x = clade_comm, cluster = mixing_groups_hypo, control = how(nperm = 9999))
dim(clade_comm)
mixing_groups_hypo
clade_by_mixing <- multipatt(x = clade_comm, cluster = mixing_groups_hypo, control = how(nperm = 9999))
sampleids <- rownames(clade_comm)
layer <- substr(sampleids, start=3, stop=3)
lakes <- substr(sampleids, start=1, stop=2)
mixing_groups_hypo <- c()
mixing_groups_hypo[which(lakes == "CB")] <- 1
mixing_groups_hypo[which(lakes == "TB" | lakes == "NS" | lakes == "SS") ] <- 2
mixing_groups_hypo[which(lakes == "MA")] <- 3
clade_by_mixing <- multipatt(x = clade_comm, cluster = mixing_groups_hypo, control = how(nperm = 9999))
summary(clade_by_mixing, alpha = 0.001)
str(clade_by_mising)
str(clade_by_mixing)
rownames(clade_comm)
x <- summary(clade_by_mixing, alpha = 0.001)
str(x)
combined_clade_comm <- combinespecies(clade_comm, max.order = 10)
subset_taxa <- indicators(x=clade_comm, group = mixing_groups_hypo, max.order = 10, func = "IndVal.g",nboot = 999, verbose = T)
subset_taxa <- indicators(X=clade_comm, group = mixing_groups_hypo, max.order = 10, func = "IndVal.g",nboot = 999, verbose = T)
subset_taxa <- indicators(X=clade_comm, cluster = mixing_groups_hypo, max.order = 10, func = "IndVal.g",nboot = 999, verbose = T)
subset_taxa <- indicators(X=clade_comm, cluster = mixing_groups_hypo, group = 2 max.order = 10, func = "IndVal.g",nboot = 999, verbose = T)
subset_taxa <- indicators(X=clade_comm, cluster = mixing_groups_hypo, group = 2, max.order = 10, func = "IndVal.g",nboot = 999, verbose = T)
CB <- bog_subset("CBH", seven)
NS <- bog_subset("NSH", seven)
TB <- bog_subset("TBH", seven)
SS <- bog_subset("SSH", seven)
MA <- bog_subset("MAH", seven)
otu_comm <- cbind(CB, NS, TB, SS, MA)
clade_comm <- combine_otus("Clade", otu_comm, taxonomy)
clade_comm <- reduce_names(clade_comm)
clade_comm <- remove_reps(clade_comm)
quantile(rowSums(clade_comm))
quantile(rowSums(clade_comm))[3]
clade_comm <- clade_comm[which(rowSums(clade_comm) > quantile(rowSums(clade_comm))[3])] #50th percentile, at least 16 reads
clade_comm <- clade_comm[which(rowSums(clade_comm) > quantile(rowSums(clade_comm))[3]),] #50th percentile, at least 16 reads
clade_comm <- t(clade_comm)
clade_comm <- as.data.frame(clade_comm)
sampleids <- rownames(clade_comm)
layer <- substr(sampleids, start=3, stop=3)
lakes <- substr(sampleids, start=1, stop=2)
mixing_groups_hypo <- c()
mixing_groups_hypo[which(lakes == "CB")] <- 1
mixing_groups_hypo[which(lakes == "TB" | lakes == "NS" | lakes == "SS") ] <- 2
mixing_groups_hypo[which(lakes == "MA")] <- 3
dim(clade_comm)
subset_taxa <- indicators(X=clade_comm, cluster = mixing_groups_hypo, group = 2, max.order = 1, func = "IndVal.g",nboot = 999, verbose = T) #No combos allowed
print(subset_taxa, sqrtIVt = 0.6)
print(subset_taxa, sqrtIVt = 0.8)
subset_taxa <- indicators(X=clade_comm, cluster = mixing_groups_hypo, group = 2, max.order = 3, func = "IndVal.g",nboot = 999, verbose = T) #No combos allowed
subset_taxa <- indicators(X=clade_comm, cluster = mixing_groups_hypo, group = 2, max.order = 2, func = "IndVal.g",nboot = 999, verbose = T) #No combos allowed
subset_taxa <- indicators(X=clade_comm, cluster = mixing_groups_hypo, group = 2, max.order = 1, func = "IndVal.g",nboot = 999, verbose = T) #No combos allowed - too time intensive for a datset of this size
plotcoverage(subset_taxa)
subset_taxa2 <- prune_indicators(subset_taxa, At = 0.9, Bt = 0.9, verbose = T)
subset_taxa2 <- pruneindicators(subset_taxa, At = 0.9, Bt = 0.9, verbose = T)
subset_taxa2 <- pruneindicators(subset_taxa, At = 0.8, Bt = 0.8, verbose = T)
subset_taxa2
subset_taxa2 <- pruneindicators(subset_taxa, At = 0.75, Bt = 0.75, verbose = T)
subset_taxa2
print(subset_taxa, sqrtIVt = 0.9) #0.6 in example. This is just for viewing
otu_comm2 <- cbind(CB, NS, TB, SS, MA)
clade_comm2 <- combine_otus("Clade", otu_comm2, taxonomy)
clade_comm2 <- reduce_names(clade_comm2)
clade_comm2 <- remove_reps(clade_comm2)
clade_comm2 <- clade_comm2[which(rowSums(clade_comm2) > quantile(rowSums(clade_comm2))[3]),] #50th percentile, at least 16 reads
clade_comm2 <- t(clade_comm2)
clade_comm2 <- as.data.frame(clade_comm2)
p <- predict(subset_taxa, clade_comm2)
p
subset_taxa <- indicators(X=clade_comm, cluster = mixing_groups_hypo, group = 1, max.order = 1, func = "IndVal.g",nboot = 999, verbose = T)
subset_taxa <- indicators(X=clade_comm, cluster = mixing_groups_hypo, group = 2, max.order = 1, func = "IndVal.g",nboot = 999, verbose = T) #No combos allowed - too time intensive for a dataset of this size
p <- predict(subset_taxa2, clade_comm2)
p
subset_taxa <- indicators(X=clade_comm, cluster = mixing_groups_hypo, group = 1, max.order = 1, func = "IndVal.g",nboot = 999, verbose = T)
print(subset_taxa, sqrtIVt = 0.9)
subset_taxa2 <- pruneindicators(subset_taxa, At = 0.75, Bt = 0.75, verbose = T)
subset_taxa2
p <- predict(subset_taxa, clade_comm2)
p
p <- predict(subset_taxa2, clade_comm2)
p
subset_taxa <- indicators(X=clade_comm, cluster = mixing_groups_hypo, group = 3, max.order = 1, func = "IndVal.g",nboot = 999, verbose = T)
print(subset_taxa, sqrtIVt = 0.9)
subset_taxa2 <- pruneindicators(subset_taxa, At = 0.75, Bt = 0.75, verbose = T)
p <- predict(subset_taxa, clade_comm2)
p
rownames(clade_comm2)
nine <- year_subset("09", otu_table)
CB <- bog_subset("CBH", nine)
NS <- bog_subset("NSH", nine)
TB <- bog_subset("TBH", nine)
SS <- bog_subset("SSH", nine)
MA <- bog_subset("MAH", nine)
clade_comm2 <- combine_otus("Clade", otu_comm2, taxonomy)
colnames(clade_comm2)
colnames(nine)
colnames(CB)
colnames(otu_comm2)
CB <- bog_subset("CBH", nine)
NS <- bog_subset("NSH", nine)
TB <- bog_subset("TBH", nine)
SS <- bog_subset("SSH", nine)
MA <- bog_subset("MAH", nine)
otu_comm2 <- cbind(CB, NS, TB, SS, MA)
colnames(otu_comm2)
clade_comm2 <- combine_otus("Clade", otu_comm2, taxonomy)
clade_comm2 <- reduce_names(clade_comm2)
clade_comm2 <- remove_reps(clade_comm2)
clade_comm2 <- clade_comm2[which(rowSums(clade_comm2) > quantile(rowSums(clade_comm2))[3]),] #50th percentile, at least 16 reads
clade_comm2 <- t(clade_comm2)
clade_comm2 <- as.data.frame(clade_comm2)
p <- predict(subset_taxa, clade_comm2)
p <- predict(subset_taxa2, clade_comm2)
p
subset_taxa2
print(subset_taxa, sqrtIVt = 0.9)
subset_taxa2 <- pruneindicators(subset_taxa, At = 0.5, Bt = 0.5, verbose = T)
subset_taxa2
subset_taxa2 <- pruneindicators(subset_taxa, At = 0.9, Bt = 0.9, verbose = T)
subset_taxa2
subset_taxa2 <- pruneindicators(subset_taxa, sqrtIVt = 0.9, verbose = T)
subset_taxa2
subset_taxa2 <- pruneindicators(subset_taxa, sqrtIVt = 0.5, verbose = T)
subset_taxa2
subset_taxa2 <- pruneindicators(subset_taxa, sqrtIVt = 0.9, verbose = T)
str(subset_taxa)
dim(subset_taxa)
str(subset_taxa2)
p <- predict(subset_taxa, clade_comm2)
CB <- bog_subset("CBH", seven)
NS <- bog_subset("NSH", seven)
TB <- bog_subset("TBH", seven)
SS <- bog_subset("SSH", seven)
MA <- bog_subset("MAH", seven)
otu_comm <- cbind(CB, NS, TB, SS, MA)
clade_comm <- combine_otus("Clade", otu_comm, taxonomy)
clade_comm <- reduce_names(clade_comm)
clade_comm <- remove_reps(clade_comm)
clade_comm <- t(clade_comm)
clade_comm <- as.data.frame(clade_comm)
sampleids <- rownames(clade_comm)
layer <- substr(sampleids, start=3, stop=3)
lakes <- substr(sampleids, start=1, stop=2)
mixing_groups_hypo <- c()
mixing_groups_hypo[which(lakes == "CB")] <- 1
mixing_groups_hypo[which(lakes == "TB" | lakes == "NS" | lakes == "SS") ] <- 2
mixing_groups_hypo[which(lakes == "MA")] <- 3
nine <- year_subset("09", otu_table)
CB <- bog_subset("CBH", nine)
NS <- bog_subset("NSH", nine)
TB <- bog_subset("TBH", nine)
SS <- bog_subset("SSH", nine)
MA <- bog_subset("MAH", nine)
otu_comm2 <- cbind(CB, NS, TB, SS, MA)
clade_comm2 <- combine_otus("Clade", otu_comm2, taxonomy)
clade_comm2 <- reduce_names(clade_comm2)
clade_comm2 <- remove_reps(clade_comm2)
clade_comm2 <- t(clade_comm2)
clade_comm2 <- as.data.frame(clade_comm2)
subset_taxa <- indicators(X=clade_comm, cluster = mixing_groups_hypo, group = 3, max.order = 1, func = "IndVal.g",nboot = 999, verbose = T)
print(subset_taxa, sqrtIVt = 0.9)
subset_taxa2 <- pruneindicators(subset_taxa, sqrtIVt = 0.9, verbose = T)
subset_taxa2
p <- predict(subset_taxa, clade_comm2)
p
CB <- bog_subset("CBH", seven)
NS <- bog_subset("NSH", seven)
TB <- bog_subset("TBH", seven)
SS <- bog_subset("SSH", seven)
MA <- bog_subset("MAH", seven)
otu_comm <- cbind(CB, NS, TB, SS, MA)
clade_comm <- reduce_names(clade_comm)
clade_comm <- remove_reps(clade_comm)
clade_comm <- combine_otus("Clade", otu_comm, taxonomy)
clade_comm <- clade_comm[which(rowSums(clade_comm) > quantile(rowSums(clade_comm))[3]),]
clade_comm <- t(clade_comm)
clade_comm <- as.data.frame(clade_comm)
sampleids <- rownames(clade_comm)
layer <- substr(sampleids, start=3, stop=3)
lakes <- substr(sampleids, start=1, stop=2)
mixing_groups_hypo <- c()
mixing_groups_hypo[which(lakes == "CB")] <- 1
mixing_groups_hypo[which(lakes == "TB" | lakes == "NS" | lakes == "SS") ] <- 2
mixing_groups_hypo[which(lakes == "MA")] <- 3
subset_taxa <- indicators(X=clade_comm, cluster = mixing_groups_hypo, group = 3, max.order = 1, func = "IndVal.g",nboot = 999, verbose = T)
p <- predict(subset_taxa, clade_comm2)
dim(clade_comm)
dim(clade_comm2)
clade_table <- combine_otus("Clade", otu_table, taxonomy)
clades09 <- year_subset("09", clade_table)
clades07 <- year_subset("07", clade_table)
clades09 <- bog_subset("..H", clades09)
clades07 <- year_subset("07", clade_table)
CB <- bog_subset("CBH", clades07)
NS <- bog_subset("NSH", clades07)
TB <- bog_subset("TBH", clades07)
SS <- bog_subset("SSH", clades07)
MA <- bog_subset("MAH", clades07)
clades07 <- cbind(CB, NS, TB, SS, MA)
clade_table <- clade_table[which(rowSums(clade_table) > quantile(rowSums(clade_table))[3]),]
clades09 <- year_subset("09", clade_table)
clades09 <- bog_subset("..H", clades09)
clades07 <- year_subset("07", clade_table)
CB <- bog_subset("CBH", clades07)
NS <- bog_subset("NSH", clades07)
TB <- bog_subset("TBH", clades07)
SS <- bog_subset("SSH", clades07)
MA <- bog_subset("MAH", clades07)
clades07 <- cbind(CB, NS, TB, SS, MA)
clades07 <- remove_reps(clades07)
clades07 <- reduce_names(clades07)
clades09 <- remove_reps(clades09)
clades09 <- reduce_names(clades09)
clades07 <- t(clades07)
clades07 <- as.data.frame(clades07)
clades09 <- t(clades09)
clades09 <- as.data.frame(clades09)
sampleids <- rownames(clades07)
layer <- substr(sampleids, start=3, stop=3)
lakes <- substr(sampleids, start=1, stop=2)
mixing_groups_hypo <- c()
mixing_groups_hypo[which(lakes == "CB")] <- 1
mixing_groups_hypo[which(lakes == "TB" | lakes == "NS" | lakes == "SS") ] <- 2
mixing_groups_hypo[which(lakes == "MA")] <- 3
subset_taxa <- indicators(X=clade_comm, cluster = mixing_groups_hypo, group = 3, max.order = 1, func = "IndVal.g",nboot = 999, verbose = T)
subset_taxa <- indicators(X=clades07, cluster = mixing_groups_hypo, group = 3, max.order = 1, func = "IndVal.g",nboot = 999, verbose = T)
print(subset_taxa, sqrtIVt = 0.9)
subset_taxa2 <- pruneindicators(subset_taxa, sqrtIVt = 0.9, verbose = T)
subset_taxa2
p <- predict(subset_taxa, clade_comm2)
p
str(subset_taxa)
p <- predict(subset_taxa2, clade_comm2)
p
subset_taxa <- indicators(X=clades07, cluster = mixing_groups_hypo, group = 3, max.order = 2, func = "IndVal.g",nboot = 999, verbose = T)
tax <- read.csv(file.choose(), header=T, row.names=1)
head(tax)
library(devtools)
use_data(tax, overwrite = T)
library(OTUtable)
data(metadata)
head(metadata)
tail(metadata)
range(metadata$Depth)
range(metadata$DO)
str(metadata)
range(metadata$DO[which(is.na(metadata$DO) == F)])
hist(metadata$D)
hist(metadata$DO)
which(metadata$DO == 153)
metadata[,which(metadata$DO == 153)]
metadata[which(metadata$DO == 153),]
metadata <- read.csv(file.choose(), header=T, row.names=1)
metadata <- read.csv(file.choose(), header=T)
head(metadata)
hist(metadata$DO)
hist(metadata$Temperature)
hist(metadata$pH)
hist(metadata$Secchi.Depth)
use.data(metadata, overwrite = T)
use_data(metadata, overwrite = T)
taxonomy <- read.csv(file.choose(), header=T, row.names=1)
use_data(taxonomy, overwrite = T)
library(OTUtable)
setwd("C:/Users/Alex/Dropbox")
install.packages(file.choose(), repos=NULL)
library(OTUtable)
library(OTUtable)
data(otu_table)
data(taxonomy)
data(metadata)
clade_table <- combine_otus("Clade", otu_table, taxonomy)
CoV <- function(vector){
x <- mean(vector)
y <- sd(vector)
return(y/x)
}
taxonomy <- read.csv(file.choose(), header = T, row.names = 1, colClasses = "character")
library(devtools)
use_data(taxonomy, overwrite = T)
install.packages(file.choose(), repos=F)
library(OTUtable)
install.packages(file.choose(), repos=F)
metadata <- read.csv(file.choose(), header=T)
head(metadata)
hist(metadata$DO)
use.data(metadata, overwrite = T)
library(devtools)
use.data(metadata, overwrite = T)
use_data(metadata, overwrite = T)
library(OTUtable)
install.packages(file.choose(), repos=NULL)
library(devtools)
metadata <- read.csv(file.choose(), header=T)
str(metadata)
metadata$Sample_Name <- as.character(metadata$Sample_Name)
use_data(metadata, overwrite = T)
library(devtools)
use_data(metadata, overwrite = T)
use.data(metadata, overwrite = T)
install.packages("devtools")
metadata <- read.csv(file.choose(), header=T)
metadata$Sample_Name <- as.character(metadata$Sample_Name)
str(metadata)
head(metadata)
metadata <- read.csv(file.choose(), header=T)
metadata$Sample_Name <- as.character(metadata$Sample_Name)
str(metadata)
head(metadata)
library(devtools)
use_data(metadata, overwrite=T)
library(OTUtable)
