{
    "contents" : "#Data processing functions (post-mothur)\n\n#Select data from a single bog lake and layer\nbog_subset <- function(bog_id, table){\n  sample_ids <- colnames(table)\n  bog_names <- substr(sample_ids, start=1, stop=3)\n  subset <- table[,grep(bog_id, bog_names, ignore.case=T)]\n  return(subset)\n}\n\n#Select data from a single year\nyear_subset <- function(year_id, table){\n  sample_ids <- colnames(table)\n  year_names <- substr(sample_ids, start=9, stop=10)\n  subset <- table[,grep(year_id, year_names)]\n  return(subset)\n}\n\n#Create a date vector from a vector of sample names\nextract_date <- function(sample_ids){\n  dates <- as.Date(substr(sample_ids, start = 4, stop = 10), format = \"%d%B%y\")\n  return(dates)\n}\n\n#Remove replicate samples\nremove_reps <- function(table){\n  sample_ids <- colnames(table)\n  rep_ids <- substr(sample_ids, start=12, stop=13)\n  subset <- table[,which(rep_ids == \"\" | rep_ids == \"R1\")]\n  return(subset)\n}\n\n#Select data from a taxonomic group\ngrab_group <- function(group, level, table, taxonomy){\n  column <- match(level, colnames(taxonomy))\n  search <- grep(group, taxonomy[,column])\n  subset <- table[search,]\n  names <- c()\n  for(i in 1:length(search)){\n    names[i] <- paste(taxonomy[search[i],], collapse = \";\")\n  }\n  rownames(subset) <- make.unique(names)\n  return(subset)\n}\n\n#Create a table with groups at a higher taxonomic level than OTUs\ncombine_otus <- function(level, table, taxonomy){\n  key <- match(level, colnames(taxonomy))\n  column <- c()\n  for(i in 1:dim(taxonomy)[1]){\n    column[i] <- paste(taxonomy[i, 1:key], collapse = \";\")\n  }\n  unique_groups <- unique(column)\n  new_table <- rep(NA, dim(table)[2])\n  for(i in 1:length(unique_groups)){\n    members <- which(column == unique_groups[i])\n    if(length(members) > 1){\n      member_abun <- colSums(table[members,])\n      new_table <- rbind(new_table, member_abun)\n    }else{\n      member_abun <- table[members,]\n      new_table <- rbind(new_table, member_abun)\n    }\n  }\n  new_table <- new_table[2:dim(new_table)[1],]\n  rownames(new_table) <- unique_groups\n  colnames(new_table) <- colnames(table)\n  new_table <- data.frame(new_table)\n  return(new_table)\n}\n\n#Reduce full taxonomic name to only the last classified value in tables at higher taxonomic levels than OTUs\nreduce_names <- function(table){\n  long_names <- rownames(table)\n  split_names <- strsplit(long_names, split = \";\")\n  short_names <- c()\n  for(i in 1:length(split_names)){\n    taxa <- split_names[[i]]\n    unknown <- grep(\"unclassified\", taxa)\n    if(length(unknown) == 0){\n      blanks <- grep(\"__$\", taxa)\n      short_names[i] <- taxa[length(taxa) - length(blanks)]\n    }else{\n      short_names[i] <- taxa[length(taxa) - length(unknown)]\n    }\n  }\n  rownames(table) <- make.unique(short_names)\n  return(table)\n}\n\n\n#Convert a vector of relative abundance data for a taxon into z-score normalized form.\nzscore <- function(table){\n  ztable <- matrix(NA, ncol=length(table[1,]), nrow=length(table[,1]))\n  for (i in 1:length(table[,1])){\n    otu <- as.numeric(table[i,])\n    zotu <- (otu- mean(otu))/sd(otu)\n    ztable[i,] <- zotu\n  }\n  rownames(ztable) <- rownames(table)\n  colnames(ztable) <- colnames(table)\n  return(ztable)\n}\n",
    "created" : 1449590781992.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1249167739",
    "id" : "BA2A8807",
    "lastKnownWriteTime" : 1448481475,
    "path" : "C:/Users/amlinz16/Dropbox/OTUtable/R/data_processing.R",
    "project_path" : "R/data_processing.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}