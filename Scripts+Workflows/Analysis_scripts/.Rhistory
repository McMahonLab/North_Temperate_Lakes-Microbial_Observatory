TBHmat$Date <- as.Date(TBHmat$Date, format = "%Y-%m-%d")
TBHmat$Depth <- -TBHmat$Depth / 11 + 0.79
# Need to close polygons - add 0 or max values at top and bottom of graph
TBHmat <- TBHmat[which(is.na(TBHmat$Temperature) == F), ]
# For each date, add a hidden value outside of the plotting range
add <- TBHmat[which(TBHmat$Depth == 0.34), ]
add$Depth <- rep(-1, length(add$Depth))
add$Temperature <- rep(4, length(add$Temperature))
add2 <- add
add2$Depth <- rep(3, length(add2$Depth))
add2$Temperature <- rep(28, length(add2$Temperature))
TBHmat2 <- rbind(TBHmat, add, add2)
#pdf(file = paste(path2repo, "TBH_v_MAH_unifrac.pdf", sep = ""), width = 3.3125, height = 2.5)
ggplot() + stat_contour(data = TBHmat2, aes(y = Depth, x = Date, z = Temperature, fill = ..level..), geom = "polygon") + scale_fill_gradientn(colours = c("dodgerblue", "cyan", "green", "yellow", "red"), "Temp", limits = c(4, 28)) + geom_line(data = plot.trend, aes(x = Date, y = Distance), size = 1.5) + labs(y = "UniFrac Distance", x = NULL) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(fill = "dodgerblue3"), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour="black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title.x = element_text(size = 15, vjust = 0.2), axis.title.y = element_text(size = 12, vjust = 1.6), axis.text.y = element_text(colour = "black", size = 10)) + coord_cartesian(xlim = extract_date(c("TBH20Jun07", "TBH11Nov07")), ylim = c(0.3, 0.75))
pdf(file = paste(path2repo, "TBH_v_MAH_unifrac.pdf", sep = ""), width = 3.3125, height = 2.5)
ggplot() + stat_contour(data = TBHmat2, aes(y = Depth, x = Date, z = Temperature, fill = ..level..), geom = "polygon") + scale_fill_gradientn(colours = c("dodgerblue", "cyan", "green", "yellow", "red"), "Temp", limits = c(4, 28)) + geom_line(data = plot.trend, aes(x = Date, y = Distance), size = 1.5) + labs(y = "UniFrac Distance", x = NULL) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(fill = "dodgerblue3"), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour="black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title.x = element_text(size = 15, vjust = 0.2), axis.title.y = element_text(size = 12, vjust = 1.6), axis.text.y = element_text(colour = "black", size = 10)) + coord_cartesian(xlim = extract_date(c("TBH20Jun07", "TBH11Nov07")), ylim = c(0.3, 0.75))
dev.off()
pdf(file = paste(path2repo, "TBH_v_MAH_unifrac.pdf", sep = ""), width = 4, height = 2.5)
ggplot() + stat_contour(data = TBHmat2, aes(y = Depth, x = Date, z = Temperature, fill = ..level..), geom = "polygon") + scale_fill_gradientn(colours = c("dodgerblue", "cyan", "green", "yellow", "red"), "Temp", limits = c(4, 28)) + geom_line(data = plot.trend, aes(x = Date, y = Distance), size = 1.5) + labs(y = "1 - UniFrac Distance", x = NULL) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(fill = "dodgerblue3"), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour="black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title.x = element_text(size = 15, vjust = 0.2), axis.title.y = element_text(size = 12, vjust = 1.6), axis.text.y = element_text(colour = "black", size = 10)) + coord_cartesian(xlim = extract_date(c("TBH20Jun07", "TBH11Nov07")), ylim = c(0.3, 0.75))
dev.off()
NSH08 <- prune_samples(sampledata2$Year == "08" & sampledata2$Bog == "TB" & sampledata2$Layer == "H" | sampledata2$Year == "08" & substr(sample_names(sampledata2), start = 6, stop = 8) == "REP", alldata_reps)
NSH08_lake <- factor(substr(sample_names(NSH08), start = 1, stop = 2), levels = c("TB", "MA"))
top <- names(sort(taxa_sums(NSH08), TRUE)[1:500])
NSH08_abun = prune_taxa(top, NSH08)
x <- UniFrac(NSH08_abun, weighted = T, normalize = T)
sim <- 1 - as.matrix(x)[1:length(NSH08_lake)-1, length(NSH08_lake)]
NSH08_date <- extract_date(names(sim))
plot(NSH08_date[order(NSH08_date)], sim[order(NSH08_date)], type = "l")
plot.trend <- data.frame(NSH08_date, sim)
colnames(plot.trend) <- c("Date", "Distance")
NSHmat <- make_temp_matrix("NSH.....08", metadata)
# Remove columns with NAs
NSHmat <- NSHmat[,c(1:14, 16:30, 32:54)]
NSHmat <- melt(NSHmat)
colnames(NSHmat) <- c("Depth", "Date", "Temperature")
NSHmat$Date <- as.Date(NSHmat$Date, format = "%Y-%m-%d")
NSHmat$Depth <- -NSHmat$Depth / 40 + 0.66
# Need to close polygons - add 0 or max values at top and bottom of graph
NSHmat <- NSHmat[which(is.na(NSHmat$Temperature) == F), ]
# For each date, add a hidden -1 value
add <- NSHmat[which(NSHmat$Depth == 0.66),]
add$Depth <- rep(0, length(add$Depth))
add$Temperature <- rep(4, length(add$Temperature))
add2 <- add
add2$Depth <- rep(3, length(add2$Depth))
add2$Temperature <- rep(28, length(add2$Temperature))
NSHmat2 <- rbind(NSHmat, add, add2)
# Remove dates with missing depth measurements
#pdf(file = paste(path2repo, "NSH_v_MAH_unifrac.pdf", sep = ""), width = 3.3125, height = 2.5)
ggplot() + stat_contour(data = NSHmat2, aes(y = Depth, x = Date, z = Temperature, fill = ..level..), geom = "polygon") + coord_cartesian(xlim = extract_date(c("NSH25May08", "NSH05Oct08")), ylim = c(0.32, 0.65)) + scale_fill_gradientn(colours = c("dodgerblue", "cyan", "green", "yellow", "red"), "Temp", limits = c(4, 28)) + geom_line(data = plot.trend, aes(x = Date, y = Distance), size = 1.5) + labs(y = "UniFrac Distance", x = NULL) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(fill="dodgerblue3"), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour="black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title.x = element_text(size = 15, vjust = 0.2), axis.title.y = element_text(size = 12, vjust = 1.6), axis.text.y = element_text(colour = "black", size = 10))
#dev.off()
plot.trends
plot.trend
plot.trend[order(plot.trend$Date)]
plot.trend[order(plot.trend$Date),]
NSHmat2
TBH07 <- prune_samples(sampledata2$Year == "07" & sampledata2$Bog == "TB" & sampledata2$Layer == "H" | sampledata2$Year == "07" & substr(sample_names(sampledata2), start = 6, stop = 8) == "REP", alldata_reps)
TBH07_lake <- factor(substr(sample_names(TBH07), start = 1, stop = 2), levels = c("TB", "MA"))
top <- names(sort(taxa_sums(TBH07), TRUE)[1:500])
TBH07_abun = prune_taxa(top, TBH07)
x <- UniFrac(TBH07, weighted = T, normalize = T)
pcoa <- betadisper(x, TBH07_lakes)
pcoa <- betadisper(x, TBH07_lake)
plot_pcoa
plot(pcoa)
str(pcoa)
TBH_MAH <- prune_samples(sampledata2$Year == "07" & sampledata2$Bog == "TB" & sampledata2$Layer == "H" | sampledata2$Year == "07" & & sampledata2$Bog == "MA" & sampledata2$Layer == "H" , alldata_reps)
TBH_MAH <- prune_samples(sampledata2$Year == "07" & sampledata2$Bog == "TB" & sampledata2$Layer == "H" | sampledata2$Year == "07"  & sampledata2$Bog == "MA" & sampledata2$Layer == "H" , alldata_reps)
sample_names(TBH_MAH)
TBH_MAH_lake <- factor(substr(sample_names(TBH_MAH), start = 1, stop = 2), levels = c("TB", "MA"))
top <- names(sort(taxa_sums(TBH_MAH), TRUE)[1:500])
TBH_MAHabun = prune_taxa(top, TBH_MAH)
x <- UniFrac(TBH_MAHabun , weighted = T, normalize = T)
pcoa <- betadisper(x, TBH_MAH_lake)
plot(pcoa)
scores <- scores(pcoa)
TBH_MAH_dates <- extract_date(sample_names(TBH_MAH))
TBH_MAH_dates
plot.pcoa <- data.frame(scores$sites, TBH_MAH_lake, TBH_MAH_Date)
plot.pcoa <- data.frame(scores$sites, TBH_MAH_lake, TBH_MAH_dates)
colnames(plot.pcoa) <- c("PCoA1", "PCoA2", "Lake", "Date")
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Date, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1), legend.position="none")
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Date, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Date, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradient2(low = "black", high = "red")
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Date, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradient2()
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = as.integer(Date), shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradient2()
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = as.integer(Date), shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradient2(low = "black", high = "red")
TBH_MAH <- prune_samples(sampledata2$Year == "07" & sampledata2$Bog == "TB" & sampledata2$Layer == "H" | sampledata2$Year == "07"  & sampledata2$Bog == "MA" & sampledata2$Layer == "H" &  substr(sample_names(sampledata2), start = 6, stop = 8) != "REP", alldata_reps)
TBH_MAH_lake <- factor(substr(sample_names(TBH_MAH), start = 1, stop = 2), levels = c("TB", "MA"))
top <- names(sort(taxa_sums(TBH_MAH), TRUE)[1:500])
TBH_MAHabun = prune_taxa(top, TBH_MAH)
x <- UniFrac(TBH_MAHabun , weighted = T, normalize = T)
pcoa <- betadisper(x, TBH_MAH_lake)
scores <- scores(pcoa)
TBH_MAH_dates <- extract_date(sample_names(TBH_MAH))
plot.pcoa <- data.frame(scores$sites, TBH_MAH_lake, TBH_MAH_dates)
colnames(plot.pcoa) <- c("PCoA1", "PCoA2", "Lake", "Date")
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = as.integer(Date), shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradient2(low = "black", high = "red")
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = as.integer(Date), shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradient2(low = "grey", high = "skyblue")
range(as.integer(plot.pcoa$Date))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = as.integer(Date), shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradient2(low = "grey", high = "skyblue", values = c(13526, 13835))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = as.integer(Date), shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradient2(low = "grey", high = "skyblue", limits = c(13526, 13835))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = as.integer(Date), shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradient2(low = "black", mid = "grey", high = "skyblue", limits = c(13526, 13835))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = as.integer(Date), shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradient2(low = "black", mid = "grey", high = "skyblue", limits = c(13526, 13700, 13835))
estimate_richness(TBH_MAH, measures = "InvSimpson")
length(which(taxa_sums(TBH_MAH) > 0)
)
log(length(which(taxa_sums(TBH_MAH) > 0)))
estimate_richness(TBH_MAH, measures = "Shannon")/log(length(which(taxa_sums(TBH_MAH) > 0)))
plot.pcoa <- data.frame(scores$sites, TBH_MAH_lake, TBH_MAH_dates, estimate_richness(TBH_MAH, measures = "Shannon")/log(length(which(taxa_sums(TBH_MAH) > 0))))
colnames(plot.pcoa) <- c("PCoA1", "PCoA2", "Lake", "Date", "Evenness")
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_gradientn(low = "grey", high = "skyblue")
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(low = "grey", high = "skyblue")
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("grey", "skyblue"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("black", "skyblue"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("skyblue", "navyblue", "darkgrey"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("skyblue", "lightgreen", "darkgrey"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("skyblue", "black", "burntorange"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("skyblue", "black", "orange"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("skyblue", "darkgreen", "orange"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("skyblue", "green", "orange"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("navyblue", "green", "orange"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("dodgerblue", "green", "orange"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("royalblue4", "green", "orange"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("royalblue4", "forestgreen", "orange"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("royalblue4", "springgreen4", "orange"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("royalblue4", "seagreen", "orange"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("royalblue4", "springgreen4", "goldenrod"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("royalblue4", "springgreen4", "purple"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("royalblue4", "springgreen4", "gold3"))
pdf(file = paste(path2repo, "TBH_v_MAH_unifrac_pcoa.pdf", sep = ""), width = 4, height = 2.5)
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=3) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("royalblue4", "springgreen4", "gold3"))
dev.off()
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=3) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("darkred", "gold3", "springgreen4"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=3) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("firebrick3", "gold2", "springgreen4"))
pdf(file = paste(path2repo, "TBH_v_MAH_unifrac_pcoa.pdf", sep = ""), width = 4, height = 2.5)
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("firebrick3", "gold2", "springgreen4"))
dev.off()
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("firebrick3", "gold2", "springgreen4"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("firebrick3", "gold2", "springgreen4")) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "TB")], aes(x = PCoA1, y = PcoA2))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("firebrick3", "gold2", "springgreen4")) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "TB"),], aes(x = PCoA1, y = PcoA2))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("firebrick3", "gold2", "springgreen4")) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "TB"),], aes(x = PCoA1, y = PCoA2))
plot.pcoa <- plot.pcoa[order(plot.pcoa$Date),]
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("firebrick3", "gold2", "springgreen4")) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "TB"),], aes(x = PCoA1, y = PCoA2))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("firebrick3", "gold2", "springgreen4")) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "TB"),], aes(x = PCoA1, y = PCoA2)) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "MA"),], aes(x = PCoA1, y = PCoA2))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("firebrick3", "gold2", "springgreen4")) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "TB"),], aes(x = PCoA1, y = PCoA2), color = "grey") + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "MA"),], aes(x = PCoA1, y = PCoA2))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("firebrick3", "gold2", "springgreen4")) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "TB"),], aes(x = PCoA1, y = PCoA2)) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "MA"),], aes(x = PCoA1, y = PCoA2))
pdf(file = paste(path2repo, "TBH_v_MAH_unifrac_pcoa.pdf", sep = ""), width = 4, height = 2.75)
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("firebrick3", "gold2", "springgreen4")) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "TB"),], aes(x = PCoA1, y = PCoA2)) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "MA"),], aes(x = PCoA1, y = PCoA2))
dev.off()
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("firebrick3", "gold2", "springgreen4")) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "TB"),], aes(x = PCoA1, y = PCoA2),size = 0.75) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "MA"),], aes(x = PCoA1, y = PCoA2))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("firebrick3", "gold2", "springgreen4")) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "TB"),], aes(x = PCoA1, y = PCoA2), size = 0.5) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "MA"),], aes(x = PCoA1, y = PCoA2))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("firebrick3", "gold2", "springgreen4")) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "TB"),], aes(x = PCoA1, y = PCoA2), size = 0.25) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "MA"),], aes(x = PCoA1, y = PCoA2))
pdf(file = paste(path2repo, "TBH_v_MAH_unifrac_pcoa.pdf", sep = ""), width = 4, height = 2.75)
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("firebrick3", "gold2", "springgreen4")) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "TB"),], aes(x = PCoA1, y = PCoA2), size = 0.25) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "MA"),], aes(x = PCoA1, y = PCoA2), size = 0.25)
dev.off()
plot.trend
plot.pcoa
min(plot.pcoa$PCoA1)
str(pcoa)
barplot(pcoa)
eigenvals.betadisper(pcoa)
pcoa$eig
pcoa$eig[1]/sum(pcoa$eig)
pcoa$eig[2]/sum(pcoa$eig)
pdf(file = paste(path2repo, "TBH_v_MAH_unifrac_pcoa.pdf", sep = ""), width = 4, height = 2.75)
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("firebrick3", "gold2", "springgreen4")) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "TB"),], aes(x = PCoA1, y = PCoA2), size = 0.25) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "MA"),], aes(x = PCoA1, y = PCoA2), size = 0.25) + labs(x = "PCoA1 (56%)", y = "PCoA2 (14%)")
dev.off()
cb_buoy <- read.csv(file.choose(), header = T)
head(cb_buoy)
ggplot() + stat_contour(data = cb_buoy, aes(y = depth, x = sampledate, z = wtemp, fill = ..level..), geom = "polygon") + scale_fill_gradientn(colours = c("dodgerblue", "cyan", "green", "yellow", "red"), "Temp", limits = c(4, 28)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(fill = "dodgerblue3"), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour="black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title.x = element_text(size = 15, vjust = 0.2), axis.title.y = element_text(size = 12, vjust = 1.6), axis.text.y = element_text(colour = "black", size = 10))
str(cb_buoy)
melt_cb <- melt(cb_buoy)
head(melt_cb)
head(NSHmat)
ggplot() + stat_contour(data = TBHmat2, aes(y = Depth, x = Date, z = Temperature, fill = ..level..), geom = "polygon") + scale_fill_gradientn(colours = c("dodgerblue", "cyan", "green", "yellow", "red"), "Temp", limits = c(4, 28))
head(TBHmat)
str(TBHmat)
str(cb_buoy)
cb_buoy2 <- cb_buoy[,c(1,5,6)]
head(cb_buoy2)
cb_buoy2$sampledate <- as.Date(cb_buoy$sampledate, format = "%mm/%dd/%yyyy")
head(cb_buoy2)
as.Date(cb_buoy$sampledate, format = "%m/%d/%y")
as.Date(cb_buoy$sampledate, format = "%m/%d/%Y")
cb_buoy2$sampledate <- as.Date(cb_buoy$sampledate, format = "%m/%d/%Y")
head(cb_buoy2)
ggplot() + stat_contour(data = cb_buoy2, aes(y = depth, x = sampledate, z = wtemp, fill = ..level..), geom = "polygon") + scale_fill_gradientn(colours = c("dodgerblue", "cyan", "green", "yellow", "red"), "Temp", limits = c(4, 28)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(fill = "dodgerblue3"), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour="black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title.x = element_text(size = 15, vjust = 0.2), axis.title.y = element_text(size = 12, vjust = 1.6), axis.text.y = element_text(colour = "black", size = 10))
cb_buoy2 <- cb_buoy2[which(is.na(cb_buoy2$wtemp) == F), ]
add <- cb_buoy2[which(cb_buoy2$Depth == 0), ]
add$Depth <- rep(-1, length(add$Depth))
add <- cb_buoy2[which(cb_buoy2$Depth == 0), ]
add <- cb_buoy2[which(cb_buoy2$depth == 0), ]
add$depth <- rep(-1, length(add$depth))
add$wtemp <- rep(4, length(add$wtemp))
add2 <- add
add2$depth <- rep(3, length(add2$depth))
add2$wtemp <- rep(28, length(add2$wtemp))
cb_buoy3 <- rbind(cb_buoy2, add, add2)
ggplot() + stat_contour(data = cb_buoy3, aes(y = depth, x = sampledate, z = wtemp, fill = ..level..), geom = "polygon") + scale_fill_gradientn(colours = c("dodgerblue", "cyan", "green", "yellow", "red"), "Temp", limits = c(4, 28)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(fill = "dodgerblue3"), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour="black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title.x = element_text(size = 15, vjust = 0.2), axis.title.y = element_text(size = 12, vjust = 1.6), axis.text.y = element_text(colour = "black", size = 10))
add
add <- cb_buoy2[which(cb_buoy2$depth == 0), ]
add$depth <- rep(-1, length(add$depth))
add$wtemp <- rep(28, length(add$wtemp))
add2 <- add
add2$depth <- rep(3, length(add2$depth))
add2$wtemp <- rep(4, length(add2$wtemp))
cb_buoy3 <- rbind(cb_buoy2, add, add2)
ggplot() + stat_contour(data = cb_buoy3, aes(y = depth, x = sampledate, z = wtemp, fill = ..level..), geom = "polygon") + scale_fill_gradientn(colours = c("dodgerblue", "cyan", "green", "yellow", "red"), "Temp", limits = c(4, 28)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(fill = "dodgerblue3"), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour="black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title.x = element_text(size = 15, vjust = 0.2), axis.title.y = element_text(size = 12, vjust = 1.6), axis.text.y = element_text(colour = "black", size = 10))
colnames(metadata)
metacb <- cb_buoy[,c(1, 5, 6)]
head(metacb)
colnames(metacb) <- c("Sample_Name", "Depth", "Temperature")
metacb$DO <- NA
head(metacb)
metacb$pH <- NA
metacb$Secchi.Depth <- NA
CBmat <- make_temp_matrix("*", metacb)
cb2 <- acast(cb_buoy, sampledate ~ depth, value.var = "wtemp")
head(cb2)
plot_column(cb2, "x")
temp.diff <- cb2[,3] - cb2[,10]
temp.diff
temp.diff <- cb2[,3] - cb2[,11]
cb2[,9]
head(cb2)
length(which(is.na(cb2[,9]) == T))
length(which(is.na(cb2[,10]) == T))
length(which(is.na(cb2[,8]) == T))
temp.diff <- cb2[,3] - cb2[,8]
plot(temp.diff)
head(temp.diff)
hist(temp.diff)
rownames(cb2)[which(temp.diff < 1)]
sort(rownames(cb2)[which(temp.diff < 1)])
sort(as.Date(rownames(cb2)[which(temp.diff < 2)], format = "%m/%d/%Y"))
phenology <- function(bog, year){
dataset <- prune_samples(sampledata2$Year == year & sampledata2$Bog == bog & sampledata2$Layer == "H" | sampledata2$Year == year & substr(sample_names(sampledata2), start = 6, stop = 8) == "REP", alldata_reps)
top <- names(sort(taxa_sums(dataset), TRUE)[1:500])
dataset_abun = prune_taxa(top, dataset)
x <- UniFrac(dataset_abun, weighted = F, normalize = T)
sim <- 1 - as.matrix(x)[1:length(sample_names(dataset_abun))-1, length(sample_names(dataset_abun))]
all.dates <- extract_date(names(sim))
# remove dates that are not stratified
metabog <- metadata[which(metalakes == bog & metayears == year), c(1,2,4)]
metabog2 <- dcast(metabog, Sample_Name~Depth, fun.aggregate=mean)
temp.range <- c()
for(i in 1:dim(metabog2)[1]){
sample <- as.numeric(metabog2[i,])
temp.range[i] <- sample[2] - min(sample[which(is.na(sample) == F)])
}
mix.dates <- extract_date(metabog2$Sample_Name[which(temp.range < 2)])
stratified <- sim[!all.dates %in% mix.dates & all.dates < extract_date(paste("TBH01Nov", year, sep = ""))]
strat.dates <- extract_date(names(stratified))
r <- cor(as.numeric(strat.dates), stratified)
n <- length(stratified)
model <- lm(stratified~as.numeric(strat.dates))
p <- summary(model)$coefficients[2, 4]
print("Samples: "); print(n)
print("r^2:  "); print(r)
print("p-value: "); print(p)
plot(as.numeric(strat.dates), stratified, main = paste(bog, year))
}
phenology("CB", "07")
metalakes <- substr(metadata$Sample_Name, start = 1, stop = 2)
metayears <- substr(metadata$Sample_Name, start = 9, stop = 10)
metalakes <- substr(metadata$Sample_Name, start = 1, stop = 2)
metayears <- substr(metadata$Sample_Name, start = 9, stop = 10)
phenology("CB", "07")
phenology("CB", "09")
plot_column(make_temp_matrix("CBH.....09"), "CBH09")
plot_column(make_temp_matrix("CBH.....09", metadata), "CBH09")
plot_column(make_temp_matrix("CBH.....07", metadata), "CBH07")
plot_column(make_temp_matrix("FBH.....07", metadata), "FBH07")
plot_column(make_temp_matrix("WSH.....07", metadata), "FBH07")
plot_column(make_temp_matrix("NSH.....07", metadata), "FBH07")
plot_column(make_temp_matrix("TBH.....07", metadata), "")
plot_column(make_temp_matrix("TBH.....05", metadata), "")
plot_column(make_temp_matrix("TBH.....08", metadata), "")
plot_column(make_temp_matrix("TBH.....09", metadata), "")
plot_column(make_temp_matrix("SSH.....07", metadata), "")
plot_column(make_temp_matrix("SSH.....08", metadata), "")
plot_column(make_temp_matrix("SSH.....09", metadata), "")
plot_column(make_temp_matrix("NSH.....09", metadata), "")
plot_column(make_temp_matrix("NSH.....08", metadata), "")
plot_column(make_temp_matrix("NSH.....07", metadata), "")
OTU <- otu_table(as.matrix(otu_table), taxa_are_rows = T)
library(OTUtable)
library(phyloseq)
library(ape)
library(ggplot2)
library(vegan)
OTU <- otu_table(as.matrix(otu_table), taxa_are_rows = T)
TAX <- tax_table(as.matrix(taxonomy))
sampledata <- sample_data(data.frame(Bog = substr(colnames(otu_table), start = 1, stop = 2), Layer = substr(colnames(otu_table), start = 3, stop = 3), Year = substr(colnames(otu_table), start = 9, stop = 10), row.names = colnames(otu_table), stringsAsfactors = F))
alldata <- phyloseq(OTU, TAX, sampledata, bogtree)
epi <-prune_samples(sampledata$Year == "07" & sampledata$Layer == "E", alldata)
epi_lakes <- factor(substr(sample_names(epi), start = 1, stop = 2), levels = c("FB", "CB", "WS", "NS", "TB", "SS", "HK", "MA"))
epi_regime <- rep(NA, length(epi_lakes))
epi_regime[which(epi_lakes == "FB" | epi_lakes == "CB" | epi_lakes == "WS")] <- "polymictic"
epi_regime[which(epi_lakes == "NS" | epi_lakes == "TB" | epi_lakes == "SS")] <- "dimictic"
epi_regime[which(epi_lakes == "HK" | epi_lakes == "MA")] <- "meromictic"
epi_regime <- factor(epi_regime, levels = c("polymictic", "dimictic", "meromictic"))
x <- UniFrac(epi, weighted = T, normalize = T)
pcoa <- betadisper(x, epi_lakes)
scores <- scores(pcoa)
plot.pcoa <- data.frame(scores$sites, epi_lakes, epi_regime)
colnames(plot.pcoa) <- c("PCoA1", "PCoA2", "Lake", "Regime")
axis1 <- round(pcoa$eig[1]/sum(pcoa$eig), digits = 2)
axis2 <- round(pcoa$eig[2]/sum(pcoa$eig), digits = 2)
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Lake, shape = Regime)) + geom_point(size=1) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 10, colour = "black"), axis.text.y = element_text(size = 10, color = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), panel.border = element_rect(colour = "black", fill=NA, size=1), legend.position="none") + labs(title = "Epilimnia", x = paste("PCoA1 (", axis1, ")", sep = ""), y = paste("PCoA2 (", axis2, ")")) + scale_color_brewer(palette = "Set3")
adonis(x ~ Lake, as(sample_data(epi), "data.frame"))
# Calculate PERMADISP by mixing regime
adonis(x ~ epi_regime, as(sample_data(TBH), epi_regime, "data.frame"))
head(plot.pcoa)
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Lake, shape = Regime)) + geom_point() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 10, colour = "black"), axis.text.y = element_text(size = 10, color = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), panel.border = element_rect(colour = "black", fill=NA, size=1), legend.position="none") + labs(title = "Epilimnia", x = paste("PCoA1 (", axis1, ")", sep = ""), y = paste("PCoA2 (", axis2, ")")) + scale_color_brewer(palette = "Set3")
x <- UniFrac(epi, weighted = F, normalize = T)
pcoa <- betadisper(x, epi_lakes)
scores <- scores(pcoa)
plot.pcoa <- data.frame(scores$sites, epi_lakes, epi_regime)
colnames(plot.pcoa) <- c("PCoA1", "PCoA2", "Lake", "Regime")
axis1 <- round(pcoa$eig[1]/sum(pcoa$eig), digits = 2)
axis2 <- round(pcoa$eig[2]/sum(pcoa$eig), digits = 2)
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Lake, shape = Regime)) + geom_point() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 10, colour = "black"), axis.text.y = element_text(size = 10, color = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), panel.border = element_rect(colour = "black", fill=NA, size=1), legend.position="none") + labs(title = "Epilimnia", x = paste("PCoA1 (", axis1, ")", sep = ""), y = paste("PCoA2 (", axis2, ")")) + scale_color_brewer(palette = "Set3")
x <- distance(epi, method = "bray")
pcoa <- betadisper(x, epi_lakes)
scores <- scores(pcoa)
plot.pcoa <- data.frame(scores$sites, epi_lakes, epi_regime)
colnames(plot.pcoa) <- c("PCoA1", "PCoA2", "Lake", "Regime")
axis1 <- round(pcoa$eig[1]/sum(pcoa$eig), digits = 2)
axis2 <- round(pcoa$eig[2]/sum(pcoa$eig), digits = 2)
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Lake, shape = Regime)) + geom_point() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 10, colour = "black"), axis.text.y = element_text(size = 10, color = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), panel.border = element_rect(colour = "black", fill=NA, size=1), legend.position="none") + labs(title = "Epilimnia", x = paste("PCoA1 (", axis1, ")", sep = ""), y = paste("PCoA2 (", axis2, ")")) + scale_color_brewer(palette = "Set3")
x <- UniFrac(epi, weighted = T, normalize = T)
x <- UniFrac(epi, weighted = T, normalize = T)
pcoa <- betadisper(x, epi_lakes)
scores <- scores(pcoa)
plot.pcoa <- data.frame(scores$sites, epi_lakes, epi_regime)
colnames(plot.pcoa) <- c("PCoA1", "PCoA2", "Lake", "Regime")
axis1 <- round(pcoa$eig[1]/sum(pcoa$eig), digits = 2)
axis2 <- round(pcoa$eig[2]/sum(pcoa$eig), digits = 2)
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Lake, shape = Regime)) + geom_point() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 10, colour = "black"), axis.text.y = element_text(size = 10, color = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), panel.border = element_rect(colour = "black", fill=NA, size=1), legend.position="none") + labs(title = "Epilimnia", x = paste("PCoA1 (", axis1, ")", sep = ""), y = paste("PCoA2 (", axis2, ")")) + scale_color_brewer(palette = "Set3")
adonis(x ~ Lake, as(sample_data(epi), "data.frame"))
head(as(sample_data(epi), "data.frame"))
adonis(x ~ Bog, as(sample_data(epi), "data.frame"))
adonis(x ~ epi_regime, as(sample_data(TBH), epi_regime, "data.frame"))
adonis(x ~ epi_regime, as(sample_data(epi), epi_regime, "data.frame"))
as(sample_data(epi), epi_regime, "data.frame")
adonis(x ~ epi_regime, as(cbind(sample_data(epi), epi_regime), "data.frame"))
path2repo <- "C:/Users/Alex/Desktop/North_Temperate_Lakes-Microbial_Observatory/Figures/"
pdf(file = paste(path2repo, "epi_pcoa.pdf", sep = ""), width = 3.3125, height = 3)
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Lake, shape = Regime)) + geom_point() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 10, colour = "black"), axis.text.y = element_text(size = 10, color = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), panel.border = element_rect(colour = "black", fill=NA, size=1), legend.position="none") + labs(title = "Epilimnia", x = paste("PCoA1 (", axis1, ")", sep = ""), y = paste("PCoA2 (", axis2, ")")) + scale_color_brewer(palette = "Set3")
dev.off()
hypo <-prune_samples(sampledata$Year == "07" & sampledata$Layer == "H", alldata)
hypo_lakes <- factor(substr(sample_names(hypo), start = 1, stop = 2), levels = c("FB", "CB", "WS", "NS", "TB", "SS", "HK", "MA"))
hypo_regime <- rep(NA, length(hypo_lakes))
hypo_regime[which(hypo_lakes == "FB" | hypo_lakes == "CB" | hypo_lakes == "WS")] <- "polymictic"
hypo_regime[which(hypo_lakes == "NS" | hypo_lakes == "TB" | hypo_lakes == "SS")] <- "dimictic"
hypo_regime[which(hypo_lakes == "HK" | hypo_lakes == "MA")] <- "meromictic"
hypo_regime <- factor(hypo_regime, levels = c("polymictic", "dimictic", "meromictic"))
x <- UniFrac(hypo, weighted = T, normalize = T)
pcoa <- betadisper(x, hypo_lakes)
scores <- scores(pcoa)
plot.pcoa <- data.frame(scores$sites, hypo_lakes, hypo_regime)
colnames(plot.pcoa) <- c("PCoA1", "PCoA2", "Lake", "Regime")
axis1 <- round(pcoa$eig[1]/sum(pcoa$eig), digits = 2)
axis2 <- round(pcoa$eig[2]/sum(pcoa$eig), digits = 2)
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Lake, shape = Regime)) + geom_point(size=1) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 10, colour = "black"), axis.text.y = element_text(size = 10, color = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), panel.border = element_rect(colour = "black", fill=NA, size=1), legend.position="none") + labs(title = "hypolimnia", x = paste("PCoA1 (", axis1, ")", sep = ""), y = paste("PCoA2 (", axis2, ")")) + scale_color_brewer(palette = "Set3")
adonis(x ~ Lake, as(sample_data(hypo), "data.frame"))
adonis(x ~ hypo_regime, as(cbind(sample_data(hypo), hypo_regime), "data.frame"))
adonis(x ~ Bog, as(sample_data(hypo), "data.frame"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Lake, shape = Regime)) + geom_point() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 10, colour = "black"), axis.text.y = element_text(size = 10, color = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), panel.border = element_rect(colour = "black", fill=NA, size=1), legend.position="none") + labs(title = "hypolimnia", x = paste("PCoA1 (", axis1, ")", sep = ""), y = paste("PCoA2 (", axis2, ")")) + scale_color_brewer(palette = "Set3")
pdf(file = paste(path2repo, "hypo_pcoa.pdf", sep = ""), width = 3.3125, height = 3)
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Lake, shape = Regime)) + geom_point() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 10, colour = "black"), axis.text.y = element_text(size = 10, color = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), panel.border = element_rect(colour = "black", fill=NA, size=1), legend.position="none") + labs(title = "hypolimnia", x = paste("PCoA1 (", axis1, ")", sep = ""), y = paste("PCoA2 (", axis2, ")")) + scale_color_brewer(palette = "Set3")
dev.off()
plot.pcoa
TBH_MAH <- prune_samples(sampledata2$Year == "07" & sampledata2$Bog == "TB" & sampledata2$Layer == "H" | sampledata2$Year == "07"  & sampledata2$Bog == "MA" & sampledata2$Layer == "H" &  substr(sample_names(sampledata2), start = 6, stop = 8) != "REP", alldata_reps)
TBH_MAH_lake <- factor(substr(sample_names(TBH_MAH), start = 1, stop = 2), levels = c("TB", "MA"))
x <- UniFrac(TBH_MAH , weighted = T, normalize = T)
pcoa <- betadisper(x, TBH_MAH_lake)
scores <- scores(pcoa)
TBH_MAH_dates <- extract_date(sample_names(TBH_MAH))
plot.pcoa <- data.frame(scores$sites, TBH_MAH_lake, TBH_MAH_dates, estimate_richness(TBH_MAH, measures = "Shannon")/log(length(which(taxa_sums(TBH_MAH) > 0))))
colnames(plot.pcoa) <- c("PCoA1", "PCoA2", "Lake", "Date", "Evenness")
plot.pcoa <- plot.pcoa[order(plot.pcoa$Date),]
#Calculate weights of axes
axis1 <- round(pcoa$eig[1]/sum(pcoa$eig), digits = 2)
axis2 <- round(pcoa$eig[2]/sum(pcoa$eig), digits = 2)
MAHtable <- bog_subset("MAH", otu_table)
MAHtable05 <- year_subset("05", MAHtable)
MAHtable07 <- year_subset("07", MAHtable)
MAHtable08 <- year_subset("08", MAHtable)
MAHtable09 <- year_subset("09", MAHtable)
otu_table2 <- otu_table
otu_table2$MAH01REP05 <- rowSums(MAHtable05)/dim(MAHtable05)[2]
otu_table2$MAH01REP07 <- rowSums(MAHtable07)/dim(MAHtable07)[2]
otu_table2$MAH01REP08 <- rowSums(MAHtable08)/dim(MAHtable08)[2]
otu_table2$MAH01REP09 <- rowSums(MAHtable09)/dim(MAHtable09)[2]
OTU2 <- otu_table(as.matrix(otu_table2), taxa_are_rows = T)
sampledata2 <- sample_data(data.frame(Bog = substr(colnames(otu_table2), start = 1, stop = 2), Layer = substr(colnames(otu_table2), start = 3, stop = 3), Year = substr(colnames(otu_table2), start = 9, stop = 10), row.names = colnames(otu_table2), stringsAsfactors = F))
alldata_reps <- phyloseq(OTU2, TAX, sampledata2, bogtree)
TBH_MAH <- prune_samples(sampledata2$Year == "07" & sampledata2$Bog == "TB" & sampledata2$Layer == "H" | sampledata2$Year == "07"  & sampledata2$Bog == "MA" & sampledata2$Layer == "H" &  substr(sample_names(sampledata2), start = 6, stop = 8) != "REP", alldata_reps)
TBH_MAH_lake <- factor(substr(sample_names(TBH_MAH), start = 1, stop = 2), levels = c("TB", "MA"))
x <- UniFrac(TBH_MAH , weighted = T, normalize = T)
pcoa <- betadisper(x, TBH_MAH_lake)
scores <- scores(pcoa)
TBH_MAH_dates <- extract_date(sample_names(TBH_MAH))
plot.pcoa <- data.frame(scores$sites, TBH_MAH_lake, TBH_MAH_dates, estimate_richness(TBH_MAH, measures = "Shannon")/log(length(which(taxa_sums(TBH_MAH) > 0))))
colnames(plot.pcoa) <- c("PCoA1", "PCoA2", "Lake", "Date", "Evenness")
plot.pcoa <- plot.pcoa[order(plot.pcoa$Date),]
#Calculate weights of axes
axis1 <- round(pcoa$eig[1]/sum(pcoa$eig), digits = 2)
axis2 <- round(pcoa$eig[2]/sum(pcoa$eig), digits = 2)
plot.pcoa
ggplot() + stat_contour(data = TBHmat2, aes(y = Depth, x = Date, z = Temperature, fill = ..level..), geom = "polygon") + scale_fill_gradientn(colours = c("dodgerblue", "cyan", "green", "yellow", "red"), "Temp", limits = c(4, 28)) + geom_line(data = plot.trend, aes(x = Date, y = Distance), size = 1.5) + labs(y = "1 - UniFrac Distance", x = NULL) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(fill = "dodgerblue3"), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour="black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title.x = element_text(size = 15, vjust = 0.2), axis.title.y = element_text(size = 12, vjust = 1.6), axis.text.y = element_text(colour = "black", size = 10)) + coord_cartesian(xlim = extract_date(c("TBH20Jun07", "TBH11Nov07")), ylim = c(0.75, 0.88))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 10, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("yellow", "springgreen4", "navyblue")) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "TB"),], aes(x = PCoA1, y = PCoA2), size = 0.25) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "MA"),], aes(x = PCoA1, y = PCoA2), size = 0.25) + labs(x = paste("PCoA1 (", axis1, ")", sep = ""), y = paste("PCoA2 (", axis2, ")", sep = ""))
pdf(file = paste(path2repo, "TBH_v_MAH_unifrac_pcoa.pdf", sep = ""), width = 4, height = 2.75)
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Evenness, shape = Lake)) + geom_point(size=2) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 10, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1)) + scale_color_gradientn(colors = c("yellow", "springgreen4", "navyblue")) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "TB"),], aes(x = PCoA1, y = PCoA2), size = 0.25) + geom_path(data = plot.pcoa[which(plot.pcoa$Lake == "MA"),], aes(x = PCoA1, y = PCoA2), size = 0.25) + labs(x = paste("PCoA1 (", axis1, ")", sep = ""), y = paste("PCoA2 (", axis2, ")", sep = ""))
dev.off()
plot.pcoa
citation("phyloseq")
citation("vegan")
OTU <- otu_table(as.matrix(otu_table), taxa_are_rows = T)
TAX <- tax_table(as.matrix(taxonomy))
sampledata <- sample_data(data.frame(Bog = substr(colnames(otu_table), start = 1, stop = 2), Layer = substr(colnames(otu_table), start = 3, stop = 3), Year = substr(colnames(otu_table), start = 9, stop = 10), row.names = colnames(otu_table), stringsAsfactors = F))
alldata <- phyloseq(OTU, TAX, sampledata, bogtree)
# PCoA of North Sparkling
NSH <- prune_samples(sampledata$Bog == "NS" & sampledata$Layer == "H", alldata)
sample_names(NSH)[17] <- "NSH01JUL08"
NSH_year <- factor(substr(sample_names(NSH), start = 9, stop = 10), levels = years)
x <- UniFrac(NSH, weighted = T, normalize = T)
pcoa <- betadisper(x, NSH_year)
scores <- scores(pcoa)
NSHcentroids <- scores$centroids
NSHcentroids <- as.data.frame(NSHcentroids)
NSHcentroids$Year <- factor(years[2:4], level = years)
plot.pcoa <- data.frame(scores$sites, NSH_year)
colnames(plot.pcoa) <- c("PCoA1", "PCoA2", "Year")
axis1 <- round(pcoa$eig[1]/sum(pcoa$eig), digits = 2)
axis2 <- round(pcoa$eig[2]/sum(pcoa$eig), digits = 2)
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Year)) + geom_point() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 10, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1), legend.position="none") + geom_point(data=NSHcentroids, aes(x = PCoA1, y = PCoA2, color = Year), size = 3, shape = 3, color = "black") + labs(title = "North Sparkling Bog", x = paste("PCoA1 (", axis1, ")", sep = ""), y = paste("PCoA2 (", axis2, ")")) + coord_cartesian(xlim = c(-0.2, 0.2), ylim = c(-0.2, 0.2)) + scale_color_manual(values = colors[2:4])
adonis(x ~ Year, as(sample_data(NSH), "data.frame"))
CBH <- prune_samples(sampledata$Bog == "CB" & sampledata$Layer == "H", alldata)
CBH_year <- factor(substr(sample_names(CBH), start = 9, stop = 10), levels = years)
x <- UniFrac(CBH, weighted = T, normalize = T)
pcoa <- betadisper(x, CBH_year)
scores <- scores(pcoa)
CBHcentroids <- scores$centroids
CBHcentroids <- as.data.frame(CBHcentroids)
CBHcentroids$Year <- factor(years[c(2, 4)], level = years)
CBHcentroids
plot.pcoa <- data.frame(scores$sites, CBH_year)
colnames(plot.pcoa) <- c("PCoA1", "PCoA2", "Year")
axis1 <- round(pcoa$eig[1]/sum(pcoa$eig), digits = 2)
axis2 <- round(pcoa$eig[2]/sum(pcoa$eig), digits = 2)
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Year)) + geom_point() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 10, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1), legend.position="none") + geom_point(data=CBHcentroids, aes(x = PCoA1, y = PCoA2, color = Year), size = 3, shape = 3, color = "black") + labs(title = "North Sparkling Bog", x = paste("PCoA1 (", axis1, ")", sep = ""), y = paste("PCoA2 (", axis2, ")")) + coord_cartesian(xlim = c(-0.2, 0.2), ylim = c(-0.2, 0.2)) + scale_color_manual(values = colors[c(2, 4)])
adonis(x ~ Year, as(sample_data(CBH), "data.frame"))
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Year)) + geom_point() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 10, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1), legend.position="none") + geom_point(data=CBHcentroids, aes(x = PCoA1, y = PCoA2, color = Year), size = 3, shape = 3, color = "black") + labs(title = "Crystal Bog", x = paste("PCoA1 (", axis1, ")", sep = ""), y = paste("PCoA2 (", axis2, ")")) + coord_cartesian(xlim = c(-0.2, 0.2), ylim = c(-0.2, 0.2)) + scale_color_manual(values = colors[c(2, 4)])
MAHtable <- bog_subset("MAH", otu_table)
MAHtable05 <- year_subset("05", MAHtable)
MAHtable07 <- year_subset("07", MAHtable)
MAHtable08 <- year_subset("08", MAHtable)
MAHtable09 <- year_subset("09", MAHtable)
otu_table2 <- otu_table
otu_table2$MAH01REP05 <- rowSums(MAHtable05)/dim(MAHtable05)[2]
otu_table2$MAH01REP07 <- rowSums(MAHtable07)/dim(MAHtable07)[2]
otu_table2$MAH01REP08 <- rowSums(MAHtable08)/dim(MAHtable08)[2]
otu_table2$MAH01REP09 <- rowSums(MAHtable09)/dim(MAHtable09)[2]
OTU2 <- otu_table(as.matrix(otu_table2), taxa_are_rows = T)
sampledata2 <- sample_data(data.frame(Bog = substr(colnames(otu_table2), start = 1, stop = 2), Layer = substr(colnames(otu_table2), start = 3, stop = 3), Year = substr(colnames(otu_table2), start = 9, stop = 10), row.names = colnames(otu_table2), stringsAsfactors = F))
alldata_reps <- phyloseq(OTU2, TAX, sampledata2, bogtree)
MAH2 <- prune_samples(sampledata2$Bog == "MA" & sampledata2$Layer == "H", alldata_reps)
MAH2_year <- factor(substr(sample_names(MAH2), start = 9, stop = 10), levels = years)
MAH2_type <- substr(sample_names(MAH2), start = 6, stop = 8) == "REP"
x <- UniFrac(MAH2, weighted = T, normalize = T)
pcoa <- betadisper(x, MAH2_year)
scores <- scores(pcoa)
# Locate centroids
MAH2centroids <- scores$centroids
MAH2centroids <- as.data.frame(MAH2centroids)
MAH2centroids$Year <- factor(years, level = years)
plot.pcoa <- data.frame(scores$sites, MAH2_year, as.factor(MAH2_type))
colnames(plot.pcoa) <- c("PCoA1", "PCoA2", "Year", "Sample")
#Save for plotting
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Year, shape = Sample, size = Sample)) + geom_point() + scale_shape_manual(values = c(16, 15)) + scale_size_manual(values = c(2, 3)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1), legend.position="none") + geom_point(data=MAH2centroids, aes(x = PCoA1, y = PCoA2, color = Year), size = 3, shape = 3, color = "black") + labs(title = "Mary Lake") + scale_color_manual(values = colors)
MAHtable <- bog_subset("MAH", otu_table)
MAHtable05 <- year_subset("05", MAHtable)
MAHtable07 <- year_subset("07", MAHtable)
MAHtable08 <- year_subset("08", MAHtable)
MAHtable09 <- year_subset("09", MAHtable)
otu_table2 <- otu_table
otu_table2$MAH01REP05 <- rowSums(MAHtable05)/dim(MAHtable05)[2]
otu_table2$MAH01REP07 <- rowSums(MAHtable07)/dim(MAHtable07)[2]
otu_table2$MAH01REP08 <- rowSums(MAHtable08)/dim(MAHtable08)[2]
otu_table2$MAH01REP09 <- rowSums(MAHtable09)/dim(MAHtable09)[2]
OTU2 <- otu_table(as.matrix(otu_table2), taxa_are_rows = T)
sampledata2 <- sample_data(data.frame(Bog = substr(colnames(otu_table2), start = 1, stop = 2), Layer = substr(colnames(otu_table2), start = 3, stop = 3), Year = substr(colnames(otu_table2), start = 9, stop = 10), row.names = colnames(otu_table2), stringsAsfactors = F))
alldata_reps <- phyloseq(OTU2, TAX, sampledata2, bogtree)
MAH2 <- prune_samples(sampledata2$Bog == "MA" & sampledata2$Layer == "H", alldata_reps)
MAH2_year <- factor(substr(sample_names(MAH2), start = 9, stop = 10), levels = years)
MAH2_type <- substr(sample_names(MAH2), start = 6, stop = 8) == "REP"
x <- UniFrac(MAH2, weighted = T, normalize = T)
pcoa <- betadisper(x, MAH2_year)
scores <- scores(pcoa)
# Locate centroids
MAH2centroids <- scores$centroids
MAH2centroids <- as.data.frame(MAH2centroids)
MAH2centroids$Year <- factor(years, level = years)
plot.pcoa <- data.frame(scores$sites, MAH2_year, as.factor(MAH2_type))
colnames(plot.pcoa) <- c("PCoA1", "PCoA2", "Year", "Sample")
#Save for plotting
ggplot(data=plot.pcoa, aes(x = PCoA1, y = PCoA2, color = Year, shape = Sample, size = Sample)) + geom_point() + scale_shape_manual(values = c(16, 15)) + scale_size_manual(values = c(2, 3)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.ticks = element_line(colour = "black")) + theme(axis.text.x = element_text(hjust = 0.5, size = 12, colour = "black"), axis.title = element_text(size = 10, hjust = 0.5, vjust = 0.1), axis.text.y = element_text(colour = "black", size = 10), panel.border = element_rect(colour = "black", fill=NA, size=1), legend.position="none") + geom_point(data=MAH2centroids, aes(x = PCoA1, y = PCoA2, color = Year), size = 3, shape = 3, color = "black") + labs(title = "Mary Lake") + scale_color_manual(values = colors)
